% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkCuration.R
\name{checkCuration}
\alias{checkCuration}
\title{Title Check the curation of per-participant metadata against a template.}
\usage{
checkCuration(curated, template = read.csv(system.file("extdata/template.csv",
  package = "curatedMetagenomicData"), as.is = TRUE))
}
\arguments{
\item{curated}{a data.frame containing the curated per-participant metadata to be checked}

\item{template}{a data.frame defining valid syntax}
}
\value{
a list with two elements, [["colnames"]] and [["values]]
}
\description{
Title Check the curation of per-participant metadata against a template.
}
\details{
See Examples for the template used for curatedMetagenomicData. The template data.frame must have five columns:

1. "col.name" specifies the name of the column in the curated data.frame.

2. "var.class": the class the variable must be, e.g. character, numeric, integer

3. "uniqueness": unique means each value must be unique, non-unique means repeated values are allowed

4. "requiredness": if "required", there must be no missing (NA) values. If "optional", missing values are allowed.

5. "allowedvalues" can be a regex or one of the following shorthands:
\describe{
  \item{decimal}{"^[0-9]+\\.?[0-9]*$" (there *may* be a decimal)}
  \item{decimalonly}{"^[0-9]+\\.{1}[0-9]*$" (there *must* be a decimal)}
  \item{integer}{"^[0-9]+$" (integer only, no decimals allowed)}
  \item{*}{"." (anything is allowed)}
}
}
\examples{
eset <- curatedMetagenomicData("ZellerG_2014.metaphlan_bugs_list.stool", dryrun=FALSE)[[1]]
checkCuration(eset)
data(combined_metadata)
checkCuration(combined_metadata)

\dontrun{
template <- read.csv(system.file("extdata/template.csv",
package = "curatedMetagenomicData"), as.is = TRUE))
View(template)

data(combined_metadata)
problems <- checkCuration(curated = data.frame(combined_metadata))
View(problems$values)
}
}
